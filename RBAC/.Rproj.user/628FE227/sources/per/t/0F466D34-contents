---
title: "Untitled"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(tidyverse) 
library(ggalt)
library(countrycode)
library(rworldmap)
library(gridExtra)
library(broom)

theme_set(theme_light())
```
```{r}
data <- read_csv("D:\\R\\RBAC\\RBAC\\master.csv")
```
```{r}
glimpse(data)

sum(is.na(data$`HDI for year`)) / length(data$`HDI for year`)

table(data$age, data$generation)

data <- data %>%
  select(-c(`HDI for year`, `suicides/100k pop`)) %>%
  rename(gdp_for_year = `gdp_for_year ($)`,
         gdp_per_capita = `gdp_per_capita ($)`,
         country_year = `country-year`) %>%
  as.data.frame()

data <- data %>%
  filter(year != 2016) %>%
  select(-country_year)

minimum_years <- data %>%
  group_by(country) %>%
  summarize(rows = n(),
            years = rows / 12) %>%
  arrange(years)

data <- data %>%
  filter(!(country %in% head(minimum_years, 7)))

data$age <- gsub(" years", "", data$age)
data$sex <- ifelse(data$sex == "male", "Male", "Female")

data$continent <- countrycode(sourcevar = data[, "country"],
                              origin = "country.name",
                              destination = "continent")

data_nominal <- c("country", "sex", "continent")
data[data_nominal] <- lapply(data[data_nominal], function(x){factor(x)})

data$age <- factor(data$age,
                   ordered = T,
                   levels = c("5-14",
                              "15-24",
                              "25-34",
                              "35-54",
                              "55-74",
                              "75+"))

# making generation ordinal
data$generation <- factor(data$generation,
                          ordered = T,
                          levels = c("G.I. Generation",
                                     "Silent",
                                     "Boomers",
                                     "Generation X",
                                     "Millenials",
                                     "Generation Z"))

data <- as_tibble(data)

global_average <- (sum(as.numeric(data$suicides_no)) / sum(as.numeric(data$population))) *100000
```
```{r}
data %>%
  group_by(year) %>%
  summarise(population = sum(population),
            suicides = sum(suicides_no),
            suicides_per_100k = (suicides / population) * 100000) %>%
  ggplot(aes(x = year, y = suicides_per_100k)) +
  geom_line(col = "deepskyblue3", size = 1) +
  geom_point(col = "deepskyblue3", size = 2) +
  geom_hline(yintercept = global_average, linetype = 2, color = "grey35", size = 1) +
  labs(title = "Global Suicides (per 100k)",
       subtitle = "Trend over time, 1985 - 2015") +
  scale_x_continuous(breaks = seq(1985, 2015, 2)) +
  scale_y_continuous(breaks = seq(10, 20))
```

```{r}
continent <- data %>%
  group_by(continent) %>%
  summarize(suicide_per_100k = (sum(as.numeric(suicides_no))/sum(as.numeric(population)))*100000) %>%
  arrange(suicide_per_100k)

continent$continent <- factor(continent$continent, ordered = T, levels = continent$continent)

continent_plot <- ggplot(continent, aes(x = continent, y = suicide_per_100k, fill = continent)) +
  geom_bar(stat = "identity") +
  labs(title = "Global Suicides (per 100k), by Continent",
       fill = "Continent") +
  theme(legend.position = "none", title = element_text(size = 10)) +
  scale_y_continuous(breaks = seq(0, 20, 1), minor_breaks = F)

continent_time <- data %>%
  group_by(year, continent) %>%
  summarise(suicide_per_100k = (sum(as.numeric(suicides_no))/sum(as.numeric(population)))*100000) 

continent_time$continent <- factor(continent_time$continent, ordered = T, levels = continent$continent)

ggplot(continent_time, aes(x = year, y = suicide_per_100k, col = factor(continent))) + 
  facet_grid(continent ~ ., scales = "free_y") + 
  geom_line() + 
  geom_point() + 
  labs(title = "Trends Over Time, by Continent",
       color = "Continent") + 
  theme(legend.position = "none", title = element_text(size = 10)) + 
  scale_x_continuous(breaks = seq(1985, 2015, 5), minor_breaks = F)

g <- grid.arrange(continent_plot, continent_time_plot, ncol = 2)
```














